{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine"
            }
        },
        "fortiFPXNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Naming prefix for all deployed resources"
            }
        },
        "fortiFPXImageSKU": {
            "type": "string",
            "defaultValue": "fpx-vm-byol",
            "allowedValues": [
                "fpx-vm-byol"
            ],
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "fortiFPXImageVersion": {
            "type": "string",
            "defaultValue": "latest",
            "allowedValues": [
                "2.0.2",
                "latest"
            ],
            "metadata": {
                "description": "Select the image version"
            }
        },
        "instanceType": {
            "type": "string",
            "defaultValue": "Standard_F4s",
            "allowedValues": [ "Standard_F2s", "Standard_F8s", "Standard_F16s", "Standard_F4s", "Standard_F8", "Standard_F16", "Standard_F8s_v2", "Standard_F16s_v2", "Standard_F32s_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3" ],
            "metadata": {
                "description": "Virtual Machine size selection - must be F4 or other instance that supports 4 NICs"
            }
        },
        "publicIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identify if to use a public IP, and if so whether it's new"
            }
        },
        "publicIPName": {
            "type": "string",
            "defaultValue": "FPXClusterPublicIP",
            "metadata": {
                "description": "Name of Public IP address element."
            }
        },
        "publicIPResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group to which the Public IP belongs."
            }
        },

        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Azure virtual network."
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "172.16.136.0/22",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "ExternalSubnet",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "172.16.136.0/26",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "HBandSyncSubnet",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "172.16.136.64/26",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "fortinetTags": {
            "type": "object",
            "defaultValue": {
                "publisher": "Fortinet",
                "template": "Active-Active-ELB-FPX",
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831AP"
            }
        }
    },
    "variables": {
        "imagePublisher": "fortinet",
        "imageOffer": "fortinet-fortiproxy",
        "AvailabilitySetName": "[concat(parameters('fortiFPXNamePrefix'),'-AvailabilitySet')]",
        "AvailabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]",

        "vnetName": "[if(equals(parameters('vnetName'),''),concat(parameters('fortiFPXNamePrefix'),'-VNET'),parameters('vnetName'))]",
        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')))]",
        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')))]",
        "fpxaVmName": "[concat(parameters('fortiFPXNamePrefix'),'-FPX-A')]",
        "fpxbVmName": "[concat(parameters('fortiFPXNamePrefix'),'-FPX-B')]",
        "fpxaNic1Name": "[concat(variables('fpxaVmName'),'-Nic1')]",
        "fpxaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fpxaNic1Name'))]",
        "fpxaNic2Name": "[concat(variables('fpxaVmName'),'-Nic2')]",
        "fpxaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fpxaNic2Name'))]",
        "fpxbNic1Name": "[concat(variables('fpxbVmName'),'-Nic1')]",
        "fpxbNic1Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fpxbNic1Name'))]",
        "fpxbNic2Name": "[concat(variables('fpxbVmName'),'-Nic2')]",
        "fpxbNic2Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fpxbNic2Name'))]",
        "publicIPName": "[if(equals(parameters('publicIPName'),''),concat(parameters('fortiFPXNamePrefix'),'-FPX-PIP'),parameters('publicIPName'))]",
        "publicIPId": "[if(equals(parameters('publicIPNewOrExisting'),'new'),resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName')),resourceId(parameters('publicIPResourceGroup'),'Microsoft.Network/publicIPAddresses',variables('publicIPName')))]",
        "NSGName": "[concat(parameters('fortiFPXNamePrefix'),'-',uniqueString(resourceGroup().id),'-NSG')]",
        "NSGId": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]",
        "sn1IPArray": "[split(parameters('subnet1Prefix'),'.')]",
        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'),'/')]",
        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
        "sn1IPfpxa": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',add(int(variables('sn1IPArray2nd')[0]),5))]",
        "sn1IPfpxb": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',add(int(variables('sn1IPArray2nd')[0]),6))]",
        "sn2IPArray": "[split(parameters('subnet2Prefix'),'.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'),'/')]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2IPfpxa": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',add(int(variables('sn2IPArray2nd')[0]),5))]",
        "sn2IPfpxb": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',add(int(variables('sn2IPArray2nd')[0]),6))]",
        "externalLBName_NatRule_FPXAdminPerm_fpxa": "[concat(variables('fpxaVmName'),'FPXAdminPerm')]",
        "externalLBId_NatRule_FPXAdminPerm_fpxa": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('externalLBName'),variables('externalLBName_NatRule_FPXAdminPerm_fpxa'))]",
        "externalLBName_NatRule_SSH_fpxa": "[concat(variables('fpxaVmName'),'SSH')]",
        "externalLBId_NatRule_SSH_fpxa": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('externalLBName'),variables('externalLBName_NatRule_SSH_fpxa'))]",
        "externalLBName_NatRule_FPXAdminPerm_fpxb": "[concat(variables('fpxbVmName'),'FPXAdminPerm')]",
        "externalLBId_NatRule_FPXAdminPerm_fpxb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('externalLBName'),variables('externalLBName_NatRule_FPXAdminPerm_fpxb'))]",
        "externalLBName_NatRule_SSH_fpxb": "[concat(variables('fpxbVmName'),'SSH')]",
        "externalLBId_NatRule_SSH_fpxb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('externalLBName'),variables('externalLBName_NatRule_SSH_fpxb'))]",
        "externalLBName": "[concat(parameters('fortiFPXNamePrefix'),'-ExternalLoadBalancer')]",
        "externalLBId": "[resourceId('Microsoft.Network/loadBalancers',variables('externalLBName'))]",
        "externalLBFEName": "[concat(parameters('fortiFPXNamePrefix'),'-ELB-',parameters('subnet1Name'),'-FrontEnd')]",
        "externalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('externalLBName'),variables('externalLBFEName'))]",
        "externalLBBEName": "[concat(parameters('fortiFPXNamePrefix'),'-ELB-',parameters('subnet1Name'),'-BackEnd')]",
        "externalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('externalLBName'),variables('externalLBBEName'))]",
        "externalLBProbeName": "lbprobe",
        "externalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('externalLBName'),variables('externalLBProbeName'))]"
    },
    "resources": [
        {
            "apiVersion": "2019-10-01",
            "name": "pid-2dc4b447-552f-557f-b1cc-2faec6f9f133",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deplymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('AvailabilitySetName')]",
            "apiVersion": "2019-07-01",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },

        {
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-04-01",
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowPROXYInbound",
                        "properties": {
                            "description": "Allow http in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowMGTInbound",
                        "properties": {
                            "description": "Allow https in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSSHInbound",
                        "properties": {
                            "description": "Allow SSH Mgt",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('externalLBName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[variables('publicIPId')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('externalLBFEName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('externalLBBEName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('externalLBBEId')]"
                            },
                            "probe": {
                                "id": "[variables('externalLBProbeId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 8080,
                            "backendPort": 8080,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 5
                        },
                        "name": "ExternalLBRule-FE-proxy"
                    }

                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('externalLBName_NatRule_SSH_fpxa')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 50030,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_FPXAdminPerm_fpxa')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 40030,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_SSH_fpxb')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 50031,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_FPXAdminPerm_fpxb')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 40031,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8080,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "[variables('externalLBProbeName')]"
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]",
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fpxaNic1Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "dependsOn": [
                "[variables('externalLBId')]",
                "[variables('vnetName')]",
                "[variables('nsgId')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfpxa')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('externalLBBEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('externalLBId_NatRule_SSH_fpxa')]"
                                },
                                {
                                    "id": "[variables('externalLBId_NatRule_FPXAdminPerm_fpxa')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fpxbNic1Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "dependsOn": [
                "[variables('externalLBId')]",
                "[variables('fpxaNic1Id')]",
                "[variables('vnetName')]",
                "[variables('nsgId')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfpxb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('externalLBBEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('externalLBId_NatRule_SSH_fpxb')]"
                                },
                                {
                                    "id": "[variables('externalLBId_NatRule_FPXAdminPerm_fpxb')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fpxaNic2Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "dependsOn": [
                "[variables('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfpxa')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ],
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fpxbNic2Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('fpxaNic2Id')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfpxb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('fpxaVmName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiFPXImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "dependsOn": [
                "[variables('fpxaNic1Id')]",
                "[variables('fpxaNic2Id')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[variables('availabilitySetId')]"
                },
                "osProfile": {
                    "computerName": "[variables('fpxaVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiFPXImageSKU')]",
                        "version": "[parameters('fortiFPXImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        },
                        {
                            "diskSizeGB": 30,
                            "lun": 1,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fpxaNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fpxaNic2Id')]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('fpxbVmName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiFPXImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "dependsOn": [
                "[variables('fpxbNic1Id')]",
                "[variables('fpxbNic2Id')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[variables('availabilitySetId')]"
                },
                "osProfile": {
                    "computerName": "[variables('fpxbVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiFPXImageSKU')]",
                        "version": "[parameters('fortiFPXImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        },
                        {
                            "diskSizeGB": 30,
                            "lun": 1,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fpxbNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fpxbNic2Id')]"
                        }
                    ]
                }
            }
        }

    ]
}